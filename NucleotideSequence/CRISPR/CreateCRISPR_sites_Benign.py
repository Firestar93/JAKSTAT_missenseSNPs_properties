#!/usr/bin/env python3

import re
import csv
from Bio.Seq import Seq

def main():
    # ------------------------------------------------------
    # 1. DEFINE GENE DATA
    # ------------------------------------------------------

    outputdirectory = "C:\\Users\\hoffmannmd\\OneDrive - National Institutes of Health\\00_PROJECTS\\STAT_JAK_HKs_paper_request\\NucleotideSequence\\CRISPR\\FoundCRISPRsites\\BENIGN\\BENIGN_"
    # Window size around each mutation
    window_size = 20

    gene_data = {
        "STAT3": {
            "sequence": (
                "ATGGCCCAATGGAATCAGCTACAGCAGCTTGACACACGGTACCTGGAGCAGCTCCATCAGCTCTACAGTGACAGCTTCCCAATGGAGCTGCGGCAGTTTCTGGCCCCTTGGATTGAGAGTCAAGATTGGGCATATGCGGCCAGCAAAGAATCACATGCCACTTTGGTGTTTCATAATCTCCTGGGAGAGATTGACCAGCAGTATAGCCGCTTCCTGCAAGAGTCGAATGTTCTCTATCAGCACAATCTACGAAGAATCAAGCAGTTTCTTCAGAGCAGGTATCTTGAGAAGCCAATGGAGATTGCCCGGATTGTGGCCCGGTGCCTGTGGGAAGAATCACGCCTTCTACAGACTGCAGCCACTGCGGCCCAGCAAGGGGGCCAGGCCAACCACCCCACAGCAGCCGTGGTGACGGAGAAGCAGCAGATGCTGGAGCAGCACCTTCAGGATGTCCGGAAGAGAGTGCAGGATCTAGAACAGAAAATGAAAGTGGTAGAGAATCTCCAGGATGACTTTGATTTCAACTATAAAACCCTCAAGAGTCAAGGAGACATGCAAGATCTGAATGGAAACAACCAGTCAGTGACCAGGCAGAAGATGCAGCAGCTGGAACAGATGCTCACTGCGCTGGACCAGATGCGGAGAAGCATCGTGAGTGAGCTGGCGGGGCTTTTGTCAGCGATGGAGTACGTGCAGAAAACTCTCACGGACGAGGAGCTGGCTGACTGGAAGAGGCGGCAACAGATTGCCTGCATTGGAGGCCCGCCCAACATCTGCCTAGATCGGCTAGAAAACTGGATAACGTCATTAGCAGAATCTCAACTTCAGACCCGTCAACAAATTAAGAAACTGGAGGAGTTGCAGCAAAAAGTTTCCTACAAAGGGGACCCCATTGTACAGCACCGGCCGATGCTGGAGGAGAGAATCGTGGAGCTGTTTAGAAACTTAATGAAAAGTGCCTTTGTGGTGGAGCGGCAGCCCTGCATGCCCATGCATCCTGACCGGCCCCTCGTCATCAAGACCGGCGTCCAGTTCACTACTAAAGTCAGGTTGCTGGTCAAATTCCCTGAGTTGAATTATCAGCTTAAAATTAAAGTGTGCATTGACAAAGACTCTGGGGACGTTGCAGCTCTCAGAGGATCCCGGAAATTTAACATTCTGGGCACAAACACAAAAGTGATGAACATGGAAGAATCCAACAACGGCAGCCTCTCTGCAGAATTCAAACACTTGACCCTGAGGGAGCAGAGATGTGGGAATGGGGGCCGAGCCAATTGTGATGCTTCCCTGATTGTGACTGAGGAGCTGCACCTGATCACCTTTGAGACCGAGGTGTATCACCAAGGCCTCAAGATTGACCTAGAGACCCACTCCTTGCCAGTTGTGGTGATCTCCAACATCTGTCAGATGCCAAATGCCTGGGCGTCCATCCTGTGGTACAACATGCTGACCAACAATCCCAAGAATGTAAACTTTTTTACCAAGCCCCCAATTGGAACCTGGGATCAAGTGGCCGAGGTCCTGAGCTGGCAGTTCTCCTCCACCACCAAGCGAGGACTGAGCATCGAGCAGCTGACTACACTGGCAGAGAAACTCTTGGGACCTGGTGTGAATTATTCAGGGTGTCAGATCACATGGGCTAAATTTTGCAAAGAAAACATGGCTGGCAAGGGCTTCTCCTTCTGGGTCTGGCTGGACAATATCATTGACCTTGTGAAAAAGTACATCCTGGCCCTTTGGAACGAAGGGTACATCATGGGCTTTATCAGTAAGGAGCGGGAGCGGGCCATCTTGAGCACTAAGCCTCCAGGCACCTTCCTGCTAAGATTCAGTGAAAGCAGCAAAGAAGGAGGCGTCACTTTCACTTGGGTGGAGAAGGACATCAGCGGTAAGACCCAGATCCAGTCCGTGGAACCATACACAAAGCAGCAGCTGAACAACATGTCATTTGCTGAAATCATCATGGGCTATAAGATCATGGATGCTACCAATATCCTGGTGTCTCCACTGGTCTATCTCTATCCTGACATTCCCAAGGAGGAGGCATTCGGAAAGTATTGTCGGCCAGAGAGCCAGGAGCATCCTGAAGCTGACCCAGGTAGCGCTGCCCCATACCTGAAGACCAAGTTTATCTGTGTGACACCAACGACCTGCAGCAATACCATTGACCTGCCGATGTCCCCCCGCACTTTAGATTCATTGATGCAGTTTGGAAATAATGGTGAAGGTGCTGAACCCTCAGCAGGAGGGCAGTTTGAGTCCCTCACCTTTGACATGGAGTTGACCTCGGAGTGCGCTACCTCCCCCATGTGA"  # SHORT placeholder
            ),
            "mutations": [
                ("Val461Leu", 461), ("Ile498Val", 498), ("Val507Phe", 507), ("Ala702Thr", 702), ("Ser763Leu", 763),
            ],
        },
        "STAT4": {
            "sequence": (
                "ATGTCTCAGTGGAATCAAGTCCAACAGTTAGAAATCAAGTTTTTGGAGCAGGTGGATCAATTCTATGATGACAACTTTCCCATGGAAATTCGGCATCTGTTGGCCCAATGGATTGAAAATCAAGACTGGGAGGCAGCTTCTAACAATGAAACCATGGCAACGATTCTTCTTCAAAACTTGTTAATACAACTGGATGAACAGTTAGGTCGTGTTTCCAAAGAGAAAAACCTACTCTTGATACACAATCTAAAAAGAATTAGGAAGGTCCTTCAGGGAAAATTTCATGGAAATCCAATGCATGTAGCTGTGGTTATTTCAAACTGTTTAAGGGAAGAGAGGAGAATATTGGCTGCAGCCAACATGCCTGTCCAGGGGCCTCTAGAGAAATCCTTACAAAGTTCTTCAGTTTCAGAAAGACAGAGGAATGTGGAGCACAAAGTGGCTGCCATTAAAAACAGTGTGCAGATGACAGAACAAGATACCAAATACTTAGAAGATCTGCAAGACGAATTTGACTACAGGTATAAAACAATTCAGACAATGGATCAGAGTGACAAGAATAGTGCCATGGTGAATCAGGAAGTTTTGACACTGCAGGAAATGCTTAACAGCCTCGATTTCAAGAGAAAGGAGGCTCTCAGTAAAATGACCCAAATCATCCATGAGACAGACCTGTTAATGAACACCATGCTCATAGAAGAGCTGCAAGACTGGAAGCGGCGGCAGCAAATCGCCTGCATCGGGGGTCCACTCCACAATGGGCTCGACCAGCTTCAGAACTGCTTTACACTATTGGCAGAAAGTCTTTTCCAACTGAGAAGGCAATTGGAGAAACTAGAGGAGCAATCTACCAAAATGACATATGAAGGTGATCCCATTCCAATGCAAAGAACTCACATGCTAGAAAGAGTCACCTTCTTGATCTACAACCTTTTCAAGAACTCATTTGTGGTTGAGCGACAGCCATGTATGCCAACCCACCCTCAGAGGCCGTTGGTACTTAAAACCCTAATTCAGTTCACTGTAAAACTAAGGCTACTAATAAAATTGCCAGAACTAAACTATCAGGTAAAGGTTAAGGCATCAATTGACAAGAATGTTTCAACTCTAAGCAACCGAAGATTTGTACTTTGTGGAACTAATGTCAAAGCCATGTCTATTGAAGAATCTTCCAATGGGAGTCTCTCAGTAGAATTTCGACATTTGCAACCAAAGGAAATGAAGTCCAGTGCTGGAGGTAAAGGAAATGAGGGCTGTCACATGGTGACTGAAGAACTTCATTCCATAACGTTTGAAACACAGATCTGCCTCTATGGCCTGACCATAGATTTGGAGACCAGCTCATTGCCTGTGGTGATGATTTCCAATGTCAGTCAGTTACCTAATGCTTGGGCATCCATCATTTGGTACAACGTGTCAACCAACGATTCCCAGAACTTGGTTTTCTTTAATAATCCTCCACCTGCCACATTGAGTCAACTACTGGAGGTGATGAGCTGGCAGTTTTCATCGTACGTTGGTCGTGGTCTTAACTCAGATCAACTCCATATGCTGGCAGAGAAGCTTACAGTCCAATCTAGCTACAGTGATGGTCACCTCACCTGGGCCAAGTTCTGCAAGGAACATTTACCTGGTAAATCATTTACCTTTTGGACATGGCTTGAAGCAATATTGGATCTAATTAAGAAACACATTCTTCCCCTTTGGATTGATGGGTATGTCATGGGCTTTGTTAGCAAAGAGAAGGAACGGCTGTTGCTAAAGGATAAAATGCCTGGCACCTTTTTATTAAGATTCAGTGAAAGCCATCTCGGAGGAATAACTTTCACCTGGGTGGACCATTCTGAAAGTGGGGAAGTGAGATTCCACTCTGTAGAACCCTACAATAAAGGCCGGTTGTCTGCTCTGCCATTCGCTGACATCCTGCGAGACTACAAAGTTATTATGGCTGAAAACATTCCTGAAAACCCTCTGAAGTACCTATATCCTGACATTCCCAAAGACAAAGCCTTCGGTAAACACTACAGCTCTCAGCCTTGCGAAGTTTCAAGACCAACAGAAAGGGGTGACAAAGGTTATGTTCCTTCTGTTTTTATCCCCATCTCAACAATCCGAAGTGATTCAACAGAGCCACATTCTCCATCAGACCTTCTTCCCATGTCTCCAAGTGTGTATGCGGTGTTGAGAGAAAACCTGAGTCCCACAACAATTGAAACTGCAATGAAGTCTCCTTATTCTGCTGAATGA"
            ),
            "mutations": [
                ("Ile115Val", 115), ("Arg240Gln", 240), ("Leu269Ile", 269), ("Thr298Ile", 298),
            ],
        },
        "STAT5B": {
            "sequence": (
                "ATGGCTGTGTGGATACAAGCTCAGCAGCTCCAAGGAGAAGCCCTTCATCAGATGCAAGCGTTATATGGCCAGCATTTTCCCATTGAGGTGCGGCATTATTTATCCCAGTGGATTGAAAGCCAAGCATGGGACTCAGTAGATCTTGATAATCCACAGGAGAACATTAAGGCCACCCAGCTCCTGGAGGGCCTGGTGCAGGAGCTGCAGAAGAAGGCAGAGCACCAGGTGGGGGAAGATGGGTTTTTACTGAAGATCAAGCTGGGGCACTATGCCACACAGCTCCAGAACACGTATGACCGCTGCCCCATGGAGCTGGTCCGCTGCATCCGCCATATATTGTACAATGAACAGAGGTTGGTCCGAGAAGCCAACAATGGTAGCTCTCCAGCTGGAAGCCTTGCTGATGCCATGTCCCAGAAACACCTCCAGATCAACCAGACGTTTGAGGAGCTGCGACTGGTCACGCAGGACACAGAGAATGAGTTAAAAAAGCTGCAGCAGACTCAGGAGTACTTCATCATCCAGTACCAGGAGAGCCTGAGGATCCAAGCTCAGTTTGGCCCGCTGGCCCAGCTGAGCCCCCAGGAGCGTCTGAGCCGGGAGACGGCCCTCCAGCAGAAGCAGGTGTCTCTGGAGGCCTGGTTGCAGCGTGAGGCACAGACACTGCAGCAGTACCGCGTGGAGCTGGCCGAGAAGCACCAGAAGACCCTGCAGCTGCTGCGGAAGCAGCAGACCATCATCCTGGATGACGAGCTGATCCAGTGGAAGCGGCGGCAGCAGCTGGCCGGGAACGGCGGGCCCCCCGAGGGCAGCCTGGACGTGCTACAGTCCTGGTGTGAGAAGTTGGCCGAGATCATCTGGCAGAACCGGCAGCAGATCCGCAGGGCTGAGCACCTCTGCCAGCAGCTGCCCATCCCCGGCCCAGTGGAGGAGATGCTGGCCGAGGTCAACGCCACCATCACGGACATTATCTCAGCCCTGGTGACCAGCACGTTCATCATTGAGAAGCAGCCTCCTCAGGTCCTGAAGACCCAGACCAAGTTTGCAGCCACTGTGCGCCTGCTGGTGGGCGGGAAGCTGAACGTGCACATGAACCCCCCCCAGGTGAAGGCCACCATCATCAGTGAGCAGCAGGCCAAGTCTCTGCTCAAGAACGAGAACACCCGCAATGATTACAGTGGCGAGATCTTGAACAACTGCTGCGTCATGGAGTACCACCAAGCCACAGGCACCCTTAGTGCCCACTTCAGGAATATGTCCCTGAAACGAATTAAGAGGTCAGACCGTCGTGGGGCAGAGTCGGTGACAGAAGAAAAATTTACAATCCTGTTTGAATCCCAGTTCAGTGTTGGTGGAAATGAGCTGGTTTTTCAAGTCAAGACCCTGTCCCTGCCAGTGGTGGTGATCGTTCATGGCAGCCAGGACAACAATGCGACGGCCACTGTTCTCTGGGACAATGCTTTTGCAGAGCCTGGCAGGGTGCCATTTGCCGTGCCTGACAAAGTGCTGTGGCCACAGCTGTGTGAGGCGCTCAACATGAAATTCAAGGCCGAAGTGCAGAGCAACCGGGGCCTGACCAAGGAGAACCTCGTGTTCCTGGCGCAGAAACTGTTCAACAACAGCAGCAGCCACCTGGAGGACTACAGTGGCCTGTCTGTGTCCTGGTCCCAGTTCAACAGGGAGAATTTACCAGGACGGAATTACACTTTCTGGCAATGGTTTGACGGTGTGATGGAAGTGTTAAAAAAACATCTCAAGCCTCATTGGAATGATGGGGCCATTTTGGGGTTTGTAAACAAGCAACAGGCCCATGACCTACTCATTAACAAGCCAGATGGGACCTTCCTCCTGAGATTCAGTGACTCAGAAATTGGCGGCATCACCATTGCTTGGAAGTTTGATTCTCAGGAAAGAATGTTTTGGAATCTGATGCCTTTTACCACCAGAGACTTCTCCATTCGGTCCCTAGCCGACCGCTTGGGAGACTTGAATTACCTTATCTACGTGTTTCCTGATCGGCCAAAAGATGAAGTATACTCCAAATACTACACACCAGTTCCCTGCGAGTCTGCTACTGCTAAAGCTGTTGATGGATACGTGAAGCCACAGATCAAGCAAGTGGTCCCTGAGTTTGTGAACGCATCTGCAGATGCCGGGGGCGGCAGCGCCACGTACATGGACCAGGCCCCCTCCCCAGCTGTGTGTCCCCAGGCTCACTATAACATGTACCCACAGAACCCTGACTCAGTCCTTGACACCGATGGGGACTTCGATCTGGAGGACACAATGGACGTAGCGCGGCGTGTGGAGGAGCTCCTGGGCCGGCCAATGGACAGTCAGTGGATCCCGCACGCACAATCGTGA"
            ),
            "mutations": [
                ("Ala130Val", 130), ("Glu315Ala", 315),
            ],
        },
        "JAK2": {
            "sequence": (
                "ATGGGAATGGCCTGCCTTACGATGACAGAAATGGAGGGAACATCCACCTCTTCTATATATCAGAATGGTGATATTTCTGGAAATGCCAATTCTATGAAGCAAATAGATCCAGTTCTTCAGGTGTATCTTTACCATTCCCTTGGGAAATCTGAGGCAGATTATCTGACCTTTCCATCTGGGGAGTATGTTGCAGAAGAAATCTGTATTGCTGCTTCTAAAGCTTGTGGTATCACACCTGTGTATCATAATATGTTTGCTTTAATGAGTGAAACAGAAAGGATCTGGTATCCACCCAACCATGTCTTCCATATAGATGAGTCAACCAGGCATAATGTACTCTACAGAATAAGATTTTACTTTCCTCGTTGGTATTGCAGTGGCAGCAACAGAGCCTATCGGCATGGAATATCTCGAGGTGCTGAAGCTCCTCTTCTTGATGACTTTGTCATGTCTTACCTCTTTGCTCAGTGGCGGCATGATTTTGTGCACGGATGGATAAAAGTACCTGTGACTCATGAAACACAGGAAGAATGTCTTGGGATGGCAGTGTTAGATATGATGAGAATAGCCAAAGAAAACGATCAAACCCCACTGGCCATCTATAACTCTATCAGCTACAAGACATTCTTACCAAAATGTATTCGAGCAAAGATCCAAGACTATCATATTTTGACAAGGAAGCGAATAAGGTACAGATTTCGCAGATTTATTCAGCAATTCAGCCAATGCAAAGCCACTGCCAGAAACTTGAAACTTAAGTATCTTATAAATCTGGAAACTCTGCAGTCTGCCTTCTACACAGAGAAATTTGAAGTAAAAGAACCTGGAAGTGGTCCTTCAGGTGAGGAGATTTTTGCAACCATTATAATAACTGGAAACGGTGGAATTCAGTGGTCAAGAGGGAAACATAAAGAAAGTGAGACACTGACAGAACAGGATTTACAGTTATATTGCGATTTTCCTAATATTATTGATGTCAGTATTAAGCAAGCAAACCAAGAGGGTTCAAATGAAAGCCGAGTTGTAACTATCCATAAGCAAGATGGTAAAAATCTGGAAATTGAACTTAGCTCATTAAGGGAAGCTTTGTCTTTCGTGTCATTAATTGATGGATATTATAGATTAACTGCAGATGCACATCATTACCTCTGTAAAGAAGTAGCACCTCCAGCCGTGCTTGAAAATATACAAAGCAACTGTCATGGCCCAATTTCGATGGATTTTGCCATTAGTAAACTGAAGAAAGCAGGTAATCAGACTGGACTGTATGTACTTCGATGCAGTCCTAAGGACTTTAATAAATATTTTTTGACTTTTGCTGTCGAGCGAGAAAATGTCATTGAATATAAACACTGTTTGATTACAAAAAATGAGAATGAAGAGTACAACCTCAGTGGGACAAAGAAGAACTTCAGCAGTCTTAAAGATCTTTTGAATTGTTACCAGATGGAAACTGTTCGCTCAGACAATATAATTTTCCAGTTTACTAAATGCTGTCCCCCAAAGCCAAAAGATAAATCAAACCTTCTAGTCTTCAGAACGAATGGTGTTTCTGATGTACCAACCTCACCAACATTACAGAGGCCTACTCATATGAACCAAATGGTGTTTCACAAAATCAGAAATGAAGATTTGATATTTAATGAAAGCCTTGGCCAAGGCACTTTTACAAAGATTTTTAAAGGCGTACGAAGAGAAGTAGGAGACTACGGTCAACTGCATGAAACAGAAGTTCTTTTAAAAGTTCTGGATAAAGCACACAGAAACTATTCAGAGTCTTTCTTTGAAGCAGCAAGTATGATGAGCAAGCTTTCTCACAAGCATTTGGTTTTAAATTATGGAGTATGTGTCTGTGGAGACGAGAATATTCTGGTTCAGGAGTTTGTAAAATTTGGATCACTAGATACATATCTGAAAAAGAATAAAAATTGTATAAATATATTATGGAAACTTGAAGTTGCTAAACAGTTGGCATGGGCCATGCATTTTCTAGAAGAAAACACCCTTATTCATGGGAATGTATGTGCCAAAAATATTCTGCTTATCAGAGAAGAAGACAGGAAGACAGGAAATCCTCCTTTCATCAAACTTAGTGATCCTGGCATTAGTATTACAGTTTTGCCAAAGGACATTCTTCAGGAGAGAATACCATGGGTACCACCTGAATGCATTGAAAATCCTAAAAATTTAAATTTGGCAACAGACAAATGGAGTTTTGGTACCACTTTGTGGGAAATCTGCAGTGGAGGAGATAAACCTCTAAGTGCTCTGGATTCTCAAAGAAAGCTACAATTTTATGAAGATAGGCATCAGCTTCCTGCACCAAAGTGGGCAGAATTAGCAAACCTTATAAATAATTGTATGGATTATGAACCAGATTTCAGGCCTTCTTTCAGAGCCATCATACGAGATCTTAACAGTTTGTTTACTCCAGATTATGAACTATTAACAGAAAATGACATGTTACCAAATATGAGGATAGGTGCCCTGGGGTTTTCTGGTGCCTTTGAAGACCGGGATCCTACACAGTTTGAAGAGAGACATTTGAAATTTCTACAGCAACTTGGCAAGGGTAATTTTGGGAGTGTGGAGATGTGCCGGTATGACCCTCTACAGGACAACACTGGGGAGGTGGTCGCTGTAAAAAAGCTTCAGCATAGTACTGAAGAGCACCTAAGAGACTTTGAAAGGGAAATTGAAATCCTGAAATCCCTACAGCATGACAACATTGTAAAGTACAAGGGAGTGTGCTACAGTGCTGGTCGGCGTAATCTAAAATTAATTATGGAATATTTACCATATGGAAGTTTACGAGACTATCTTCAAAAACATAAAGAACGGATAGATCACATAAAACTTCTGCAGTACACATCTCAGATATGCAAGGGTATGGAGTATCTTGGTACAAAAAGGTATATCCACAGGGATCTGGCAACGAGAAATATATTGGTGGAGAACGAGAACAGAGTTAAAATTGGAGATTTTGGGTTAACCAAAGTCTTGCCACAAGACAAAGAATACTATAAAGTAAAAGAACCTGGTGAAAGTCCCATATTCTGGTATGCTCCAGAATCACTGACAGAGAGCAAGTTTTCTGTGGCCTCAGATGTTTGGAGCTTTGGAGTGGTTCTGTATGAACTTTTCACATACATTGAGAAGAGTAAAAGTCCACCAGCGGAATTTATGCGTATGATTGGCAATGACAAACAAGGACAGATGATCGTGTTCCATTTGATAGAACTTTTGAAGAATAATGGAAGATTACCAAGACCAGATGGATGCCCAGATGAGATCTATATGATCATGACAGAATGCTGGAACAATAATGTAAATCAACGCCCCTCCTTTAGGGATCTAGCTCTTCGAGTGGATCAAATAAGGGATAACATGGCTGGATGA"
            ),
            "mutations": [
                ("Leu113Val", 113), ("Gly127Asp", 127), ("Lys244Arg", 244), ("Asn337Asp", 337), ("Val392Met", 392),
                ("Cys480Phe", 480), ("Leu892Val", 892),
            ],
        },
        "JAK3": {
            "sequence": (
                "ATGGCACCTCCAAGTGAAGAGACGCCCCTGATCCCTCAGCGTTCATGCAGCCTCTTGTCCACGGAGGCTGGTGCCCTGCATGTGCTGCTGCCCGCTCGGGGCCCCGGGCCCCCCCAGCGCCTATCTTTCTCCTTTGGGGACCACTTGGCTGAGGACCTGTGCGTGCAGGCTGCCAAGGCCAGCGGCATCCTGCCTGTGTACCACTCCCTCTTTGCTCTGGCCACGGAGGACCTGTCCTGCTGGTTCCCCCCGAGCCACATCTTCTCCGTGGAGGATGCCAGCACCCAAGTCCTGCTGTACAGGATTCGCTTTTACTTCCCCAATTGGTTTGGGCTGGAGAAGTGCCACCGCTTCGGGCTACGCAAGGATTTGGCCAGTGCTATCCTTGACCTGCCAGTCCTGGAGCACCTCTTTGCCCAGCACCGCAGTGACCTGGTGAGTGGGCGCCTCCCCGTGGGCCTCAGTCTCAAGGAGCAGGGTGAGTGTCTCAGCCTGGCCGTGTTGGACCTGGCCCGGATGGCGCGAGAGCAGGCCCAGCGGCCGGGAGAGCTGCTGAAGACTGTCAGCTACAAGGCCTGCCTACCCCCAAGCCTGCGCGACCTGATCCAGGGCCTGAGCTTCGTGACGCGGAGGCGTATTCGGAGGACGGTGCGCAGAGCCCTGCGCCGCGTGGCCGCCTGCCAGGCAGACCGGCACTCGCTCATGGCCAAGTACATCATGGACCTGGAGCGGCTGGATCCAGCCGGGGCCGCCGAGACCTTCCACGTGGGCCTCCCTGGGGCCCTTGGTGGCCACGACGGGCTGGGGCTGCTCCGCGTGGCTGGTGACGGCGGCATCGCCTGGACCCAGGGAGAACAGGAGGTCCTCCAGCCCTTCTGCGACTTTCCAGAAATCGTAGACATTAGCATCAAGCAGGCCCCGCGCGTTGGCCCGGCCGGAGAGCACCGCCTGGTCACTGTTACCAGGACAGACAACCAGATTTTAGAGGCCGAGTTCCCAGGGCTGCCCGAGGCTCTGTCGTTCGTGGCGCTCGTGGACGGCTACTTCCGGCTGACCACGGACTCCCAGCACTTCTTCTGCAAGGAGGTGGCACCGCCGAGGCTGCTGGAGGAAGTGGCCGAGCAGTGCCACGGCCCCATCACTCTGGACTTTGCCATCAACAAGCTCAAGACTGGGGGCTCACGTCCTGGCTCCTATGTTCTCCGCCGCAGCCCCCAGGACTTTGACAGCTTCCTCCTCACTGTCTGTGTCCAGAACCCCCTTGGTCCTGATTATAAGGGCTGCCTCATCCGGCGCAGCCCCACAGGAACCTTCCTTCTGGTTGGCCTCAGCCGACCCCACAGCAGTCTTCGAGAGCTCCTGGCAACCTGCTGGGATGGGGGGCTGCACGTAGATGGGGTGGCAGTGACCCTCACTTCCTGCTGTATCCCCAGACCCAAAGAAAAGTCCAACCTGATCGTGGTCCAGAGAGGTCACAGCCCACCCACATCATCCTTGGTTCAGCCCCAATCCCAATACCAGCTGAGTCAGATGACATTTCACAAGATCCCTGCTGACAGCCTGGAGTGGCATGAGAACCTGGGCCATGGGTCCTTCACCAAGATTTACCGGGGCTGTCGCCATGAGGTGGTGGATGGGGAGGCCCGAAAGACAGAGGTGCTGCTGAAGGTCATGGATGCCAAGCACAAGAACTGCATGGAGTCATTCCTGGAAGCAGCGAGCTTGATGAGCCAAGTGTCGTACCGGCATCTCGTGCTGCTCCACGGCGTGTGCATGGCTGGAGACAGCACCATGGTGCAGGAATTTGTACACCTGGGGGCCATAGACATGTATCTGCGAAAACGTGGCCACCTGGTGCCAGCCAGCTGGAAGCTGCAGGTGGTCAAACAGCTGGCCTACGCCCTCAACTATCTGGAGGACAAAGGCCTGCCCCATGGCAATGTCTCTGCCCGGAAGGTGCTCCTGGCTCGGGAGGGGGCTGATGGGAGCCCGCCCTTCATCAAGCTGAGTGACCCTGGGGTCAGCCCCGCTGTGTTAAGCCTGGAGATGCTCACCGACAGGATCCCCTGGGTGGCCCCCGAGTGTCTCCGGGAGGCGCAGACACTTAGCTTGGAAGCTGACAAGTGGGGCTTCGGCGCCACGGTCTGGGAAGTGTTTAGTGGCGTCACCATGCCCATCAGTGCCCTGGATCCTGCTAAGAAACTCCAATTTTATGAGGACCGGCAGCAGCTGCCGGCCCCCAAGTGGACAGAGCTGGCCCTGCTGATTCAACAGTGCATGGCCTATGAGCCGGTCCAGAGGCCCTCCTTCCGAGCCGTCATTCGTGACCTCAATAGCCTCATCTCTTCAGACTATGAGCTCCTCTCAGACCCCACACCTGGTGCCCTGGCACCTCGTGATGGGCTGTGGAATGGTGCCCAGCTCTATGCCTGCCAAGACCCCACGATCTTCGAGGAGAGACACCTCAAGTACATCTCACAGCTGGGCAAGGGCAACTTTGGCAGCGTGGAGCTGTGCCGCTATGACCCGCTAGGCGACAATACAGGTGCCCTGGTGGCCGTGAAACAGCTGCAGCACAGCGGGCCAGACCAGCAGAGGGACTTTCAGCGGGAGATTCAGATCCTCAAAGCACTGCACAGTGATTTCATTGTCAAGTATCGTGGTGTCAGCTATGGCCCGGGCCGCCAGAGCCTGCGGCTGGTCATGGAGTACCTGCCCAGCGGCTGCTTGCGCGACTTCCTGCAGCGGCACCGCGCGCGCCTCGATGCCAGCCGCCTCCTTCTCTATTCCTCGCAGATCTGCAAGGGCATGGAGTACCTGGGCTCCCGCCGCTGCGTGCACCGCGACCTGGCCGCCCGAAACATCCTCGTGGAGAGCGAGGCACACGTCAAGATCGCTGACTTCGGCCTAGCTAAGCTGCTGCCGCTTGACAAAGACTACTACGTGGTCCGCGAGCCAGGCCAGAGCCCCATTTTCTGGTATGCCCCCGAATCCCTCTCGGACAACATCTTCTCTCGCCAGTCAGACGTCTGGAGCTTCGGGGTCGTCCTGTACGAGCTCTTCACCTACTGCGACAAAAGCTGCAGCCCCTCGGCCGAGTTCCTGCGGATGATGGGATGTGAGCGGGATGTCCCCGCCCTCTGCCGCCTCTTGGAACTGCTGGAGGAGGGCCAGAGGCTGCCGGCGCCTCCTGCCTGCCCTGCTGAGGTTCACGAGCTCATGAAGCTGTGCTGGGCCCCTAGCCCACAGGACCGGCCATCATTCAGCGCCCTGGGCCCCCAGCTGGACATGCTGTGGAGCGGAAGCCGGGGGTGTGAGACTCATGCCTTCACTGCTCACCCAGAGGGCAAACACCACTCCCTGTCCTTTTCATAG"
            ),
            "mutations": [
                ("Ile63Val", 63), ("Arg121His", 121), ("Val217Met", 217),
                ("Pro396Leu", 396), ("Arg451Gln", 451), ("His879Arg", 879), ("Ile1003Val", 1003),
                ("Ala1090Thr", 1090),
            ],
        },
        "TYK2": {
            "sequence": (
                "ATGCCTCTGCGCCACTGGGGGATGGCCAGGGGCAGTAAGCCCGTTGGGGATGGAGCCCAGCCCATGGCTGCCATGGGAGGCCTGAAGGTGCTTCTGCACTGGGCTGGTCCAGGCGGCGGGGAGCCCTGGGTCACTTTCAGTGAGTCATCGCTGACAGCTGAGGAAGTCTGCATCCACATTGCACATAAAGTTGGTATCACTCCTCCTTGCTTCAATCTCTTTGCCCTCTTCGATGCTCAGGCCCAAGTCTGGTTGCCCCCAAACCACATCCTAGAGATCCCCAGAGATGCAAGCCTGATGCTATATTTCCGCATAAGGTTTTATTTCCGGAACTGGCATGGCATGAATCCTCGGGAACCGGCTGTGTACCGTTGTGGGCCCCCAGGAACCGAGGCATCCTCAGATCAGACAGCACAGGGGATGCAACTCCTGGACCCAGCCTCATTTGAGTACCTCTTTGAGCAGGGCAAGCATGAGTTTGTGAATGACGTGGCATCACTGTGGGAGCTGTCGACCGAGGAGGAGATCCACCACTTTAAGAATGAGAGCCTGGGCATGGCCTTTCTGCACCTCTGTCACCTCGCTCTCCGCCATGGCATCCCCCTGGAGGAGGTGGCCAAGAAGACCAGCTTCAAGGACTGCATCCCGCGCTCCTTCCGCCGGCATATCCGGCAGCACAGCGCCCTGACCCGGCTGCGCCTTCGGAACGTCTTCCGCAGGTTCCTGCGGGACTTCCAGCCGGGCCGACTCTCCCAGCAGATGGTCATGGTCAAATACCTAGCCACACTCGAGCGGCTGGCACCCCGCTTCGGCACAGAGCGTGTGCCCGTGTGCCACCTGAGGCTGCTGGCCCAGGCCGAGGGGGAGCCCTGCTACATCCGGGACAGTGGGGTGGCCCCTACAGACCCTGGCCCTGAGTCTGCTGCTGGGCCCCCAACCCACGAGGTGCTGGTGACAGGCACTGGTGGCATCCAGTGGTGGCCAGTAGAGGAGGAGGTGAACAAGGAGGAGGGTTCTAGTGGCAGCAGTGGCAGGAACCCCCAAGCCAGCCTGTTTGGGAAGAAGGCCAAGGCTCACAAGGCAGTCGGCCAGCCGGCAGACAGGCCGCGGGAGCCACTGTGGGCCTACTTCTGTGACTTCCGGGACATCACCCACGTGGTGCTGAAAGAGCACTGTGTCAGCATCCACCGGCAGGACAACAAGTGCCTGGAGCTGAGCTTGCCTTCCCGGGCTGCGGCGCTGTCCTTCGTGTCGCTGGTGGACGGCTATTTCCGCCTGACGGCCGACTCCAGCCACTACCTGTGCCACGAGGTGGCTCCCCCACGGCTGGTGATGAGCATCCGGGATGGGATCCACGGACCCCTGCTGGAGCCATTTGTGCAGGCCAAGCTGCGGCCCGAGGACGGCCTGTACCTCATTCACTGGAGCACCAGCCACCCCTACCGCCTGATCCTCACAGTGGCCCAGCGTAGCCAGGCACCAGACGGCATGCAGAGCTTGCGGCTCCGAAAGTTCCCCATTGAGCAGCAGGACGGGGCCTTCGTGCTGGAGGGCTGGGGCCGGTCCTTCCCCAGCGTTCGGGAACTTGGGGCTGCCTTGCAGGGCTGCTTGCTGAGGGCCGGGGATGACTGCTTCTCTCTGCGTCGCTGTTGCCTGCCCCAACCAGGAGAAACCTCCAATCTCATCATCATGCGGGGGGCTCGGGCCAGCCCCAGGACACTCAACCTCAGCCAGCTCAGCTTCCACCGGGTTGACCAGAAGGAGATCACCCAGCTGTCCCACTTGGGCCAGGGCACAAGGACCAACGTGTATGAGGGCCGCCTGCGAGTGGAGGGCAGCGGGGACCCTGAGGAGGGCAAGATGGATGACGAGGACCCCCTCGTGCCTGGCAGGGACCGTGGGCAGGAGCTACGAGTGGTGCTCAAAGTGCTGGACCCTAGTCACCATGACATCGCCCTGGCCTTCTACGAGACAGCCAGCCTCATGAGCCAGGTCTCCCACACGCACCTGGCCTTCGTGCATGGCGTCTGTGTGCGCGGCCCTGAAAATATCATGGTGACAGAGTACGTGGAGCACGGACCCCTGGATGTGTGGCTGCGGAGGGAGCGGGGCCATGTGCCCATGGCTTGGAAGATGGTGGTGGCCCAGCAGCTGGCCAGCGCCCTCAGCTACCTGGAGAACAAGAACCTGGTTCATGGTAATGTGTGTGGCCGGAACATCCTGCTGGCCCGGCTGGGGTTGGCAGAGGGCACCAGCCCCTTCATCAAGCTGAGTGATCCTGGCGTGGGCCTGGGCGCCCTCTCCAGGGAGGAGCGGGTGGAGAGGATCCCCTGGCTGGCCCCCGAATGCCTACCAGGTGGGGCCAACAGCCTAAGCACCGCCATGGACAAGTGGGGGTTTGGCGCCACCCTCCTGGAGATCTGCTTTGACGGAGAGGCCCCTCTGCAGAGCCGCAGTCCCTCCGAGAAGGAGCATTTCTACCAGAGGCAGCACCGGCTGCCCGAGCCCTCCTGCCCACAGCTGGCCACACTCACCAGCCAGTGTCTGACCTATGAGCCAACCCAGAGGCCATCATTCCGCACCATCCTGCGTGACCTCACCCGGCTGCAGCCCCACAATCTTGCTGACGTCTTGACTGTGAACCCGGACTCACCGGCGTCGGACCCTACGGTTTTCCACAAGCGCTATTTGAAAAAGATCCGAGATCTGGGCGAGGGTCACTTCGGCAAGGTCAGCTTGTACTGCTACGATCCGACCAACGACGGCACTGGCGAGATGGTGGCGGTGAAAGCCCTCAAGGCAGACTGCGGCCCCCAGCACCGCTCGGGCTGGAAGCAGGAGATTGACATTCTGCGCACGCTCTACCACGAGCACATCATCAAGTACAAGGGCTGCTGCGAGGACCAAGGCGAGAAGTCGCTGCAGCTGGTCATGGAGTACGTGCCCCTGGGCAGCCTCCGAGACTACCTGCCCCGGCACAGCATCGGGCTGGCCCAGCTGCTGCTCTTCGCCCAGCAGATCTGCGAGGGCATGGCCTATCTGCACGCGCAGCACTACATCCACCGAGACCTAGCCGCGCGCAACGTGCTGCTGGACAACGACAGGCTGGTCAAGATCGGGGACTTTGGCCTAGCCAAGGCCGTGCCCGAAGGCCACGAGTACTACCGCGTGCGCGAGGATGGGGACAGCCCCGTGTTCTGGTATGCCCCAGAGTGCCTGAAGGAGTATAAGTTCTACTATGCGTCAGATGTCTGGTCCTTCGGGGTGACCCTGTATGAGCTGCTGACGCACTGTGACTCCAGCCAGAGCCCCCCCACGAAATTCCTTGAGCTCATAGGCATTGCTCAGGGTCAGATGACAGTTCTGAGACTCACTGAGTTGCTGGAACGAGGGGAGAGGCTGCCACGGCCCGACAAATGTCCCTGTGAGGTCTATCATCTCATGAAGAACTGCTGGGAGACAGAGGCGTCCTTTCGCCCAACCTTCGAGAACCTCATACCCATTCTGAAGACAGTCCATGAGAAGTACCAAGGCCAGGCCCCTTCAGTGTTCAGCGTGTGCTGA"
            ),
            "mutations": [
                ("Val15Ala", 15), ("Ala53Thr", 53), ("Arg197His", 197), ("Gly363Ser", 363),
                ("Arg744Trp", 744),
                ("Pro820His", 820), ("His993Tyr", 993), ("Glu1163Gly", 1163),
            ],
        },
    }




    # ------------------------------------------------------
    # 2. CAS9 VARIANTS (ONLY ONE PER UNIQUE IUPAC)
    # ------------------------------------------------------
    # We'll keep only entries that have a well-defined IUPAC code
    # and do not duplicate the same IUPAC pattern.
    cas_variants = [
        {
            "name": "SpCas9",
            "iupac": "NGG",
            "recognition": "5'-NGG-3'",
        },
        {
            "name": "SaCas9",
            "iupac": "NNGRRT",
            "recognition": "5'-NNGRRT-3'",
        },
        {
            "name": "NmCas9",
            "iupac": "NNNNGATT",
            "recognition": "5'-NNNNGATT-3'",
        },
        {
            "name": "St1Cas9",
            "iupac": "NNAGAAW",
            "recognition": "5'-NNAGAAW-3'",
        },
        {
            "name": "St3Cas9",
            "iupac": "NGGNG",
            "recognition": "5'-NGGNG-3'",
        },
        {
            "name": "CjCas9",
            "iupac": "NNNNACA",
            "recognition": "5'-NNNNACA-3'",
        },
        {
            "name": "FnCas9",
            "iupac": "YG",
            "recognition": "5'-YG-3'",
        },
        {
            "name": "TdCas9",
            "iupac": "NAAAW",
            "recognition": "5'-NAAA(A/T)-3'",
        },
        {
            "name": "SpCas9-NG (SpG)",
            "iupac": "NG",
            "recognition": "5'-NG-3'",
        },
        {
            "name": "SpRY",
            "iupac": "NRN",
            "recognition": "Near-PAM-less (NRN)",
        },
    ]

    # ------------------------------------------------------
    # 3. IUPAC -> REGEX CONVERSION
    # ------------------------------------------------------
    iupac_dict = {
        "A": "A",   "C": "C",   "G": "G",   "T": "T",
        "R": "[AG]","Y": "[CT]","S": "[GC]","W": "[AT]",
        "K": "[GT]","M": "[AC]","B": "[CGT]","D": "[AGT]",
        "H": "[ACT]","V": "[ACG]","N": "[ACGT]"
    }

    def iupac_to_regex(iupac_seq):
        pattern_str = ""
        for char in iupac_seq.upper():
            pattern_str += iupac_dict.get(char, char)  # default: pass char if unknown
        return re.compile(pattern_str)

    # Compile each Cas variant's pattern
    for cas in cas_variants:
        cas["pattern"] = iupac_to_regex(cas["iupac"])

    # ------------------------------------------------------
    # 4. SEARCH FUNCTION
    # ------------------------------------------------------
    def find_pam_sites_in_window(full_seq, start_pos, end_pos, win_size, cas_variant):
        """
        Extract a window around [start_pos..end_pos] (1-based),
        then search for the Cas9 PAM using the compiled regex.
        Return a list of (localStart, localEnd, fullStart, fullEnd).
        """
        seq_len = len(full_seq)
        wstart = max(1, start_pos - win_size)
        wend   = min(seq_len, end_pos + win_size)

        py_start = wstart - 1
        py_end   = wend

        snippet = full_seq[py_start:py_end].upper()

        matches = []
        for m in cas_variant["pattern"].finditer(snippet):
            loc_start = m.start() + 1  # convert to 1-based
            loc_end   = m.end()
            full_start = wstart + loc_start - 1
            full_end   = wstart + loc_end - 1

            matches.append((loc_start, loc_end, full_start, full_end))

        return matches

    # ------------------------------------------------------
    # 5. PROCESS EACH GENE -> OWN FILE
    # ------------------------------------------------------
    for gene_name, info in gene_data.items():
        sequence = info["sequence"].upper()
        mutations = info["mutations"]

        # We'll store hits in a dict: enzyme_hits[casName][mutName] = [ ...positions... ]
        enzyme_hits = {}
        for cas in cas_variants:
            enzyme_hits[cas["name"]] = {
                "iupac": cas["iupac"]
            }

        for (mut_name, aminoacid) in mutations:
            start = aminoacid*3-2
            end = start+2
            for cas in cas_variants:
                cas_name = cas["name"]
                hits = find_pam_sites_in_window(sequence, start, end, window_size, cas)
                enzyme_hits[cas_name][mut_name] = hits

        # Build the header
        header_cols = ["Cas_protein", "Recognition"]
        for (mut_name, _) in mutations:
            header_cols += [
                mut_name,
                f"{mut_name}_LocalStart",
                f"{mut_name}_LocalEnd",
                f"{mut_name}_FullStart",
                f"{mut_name}_FullEnd",
            ]

        output_filename = outputdirectory+f"{gene_name}.tsv"
        with open(output_filename, "wt", newline="", encoding="utf-8") as out_f:
            writer = csv.writer(out_f, delimiter="\t")
            writer.writerow(header_cols)

            # One row per Cas
            for cas_name in sorted(enzyme_hits.keys()):
                row_data = [cas_name, enzyme_hits[cas_name]["iupac"]]

                # For each mutation in the same order, gather hits
                for (mut_name, _) in mutations:
                    pos_list = enzyme_hits[cas_name][mut_name]
                    if not pos_list:
                        # no hits => placeholders
                        row_data += [mut_name, "-", "-", "-", "-"]
                    else:
                        local_starts = ";".join(str(p[0]) for p in pos_list)
                        local_ends   = ";".join(str(p[1]) for p in pos_list)
                        full_starts  = ";".join(str(p[2]) for p in pos_list)
                        full_ends    = ";".join(str(p[3]) for p in pos_list)

                        row_data += [
                            mut_name,
                            local_starts,
                            local_ends,
                            full_starts,
                            full_ends
                        ]

                writer.writerow(row_data)

        print(f"Created file: {output_filename}")

    print("All done!")


if __name__ == "__main__":
    main()
